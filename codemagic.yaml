workflows:
  android-app:
    name: Android SMS Gateway
    max_build_duration: 60
    environment:
      groups:
        - android_config
      vars:
        PACKAGE_NAME: "com.example.smsgateway"
      java: 17
    scripts:
      - name: Show environment info
        script: |
          java -version
          echo "Android SDK Root: $ANDROID_SDK_ROOT"
          echo "Working directory: $(pwd)"
          ls -la
          
      - name: Set up local properties
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/local.properties"
          cat local.properties
          
      - name: Setup Project Structure
        script: |
          # Create basic project structure
          mkdir -p app/src/main/java/com/example/smsgateway
          mkdir -p app/src/main/res/layout
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/res/mipmap-xxxhdpi
          
          # Create ic_launcher.png
          echo "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABhSURBVFhH7ZcxCgAgCAQ1ev8r2xZEYJJ1FHQHt8n4OVRUfsQYc8vsXZ0w9vYLN0BWH8BtQLEfVj+28YBaZCv/6B2QXpXvd0CTXwPwADwAD8AD8ICrgL9liO2HtwdkatUF5TVEJjP3V8IAAAAASUVORK5CYII=" | base64 -d > app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
          
          # Create AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              <application
                  android:allowBackup="true"
                  android:icon="@mipmap/ic_launcher"
                  android:label="@string/app_name"
                  android:theme="@style/Theme.AppCompat.Light.DarkActionBar">
                  <activity 
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOL
          
          # Create MainActivity.kt
          cat > app/src/main/java/com/example/smsgateway/MainActivity.kt << 'EOL'
          package com.example.smsgateway
          
          import android.os.Bundle
          import androidx.appcompat.app.AppCompatActivity
          
          class MainActivity : AppCompatActivity() {
              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  setContentView(R.layout.activity_main)
              }
          }
          EOL
          
          # Create activity_main.xml
          cat > app/src/main/res/layout/activity_main.xml << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"
              android:gravity="center">
              <TextView
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/app_name"/>
          </LinearLayout>
          EOL
          
          # Create strings.xml
          cat > app/src/main/res/values/strings.xml << 'EOL'
          <resources>
              <string name="app_name">SMS Gateway</string>
          </resources>
          EOL
          
      - name: Setup Gradle files
        script: |
          # Create settings.gradle
          echo 'rootProject.name = "SMSGateway"' > settings.gradle
          echo 'include ":app"' >> settings.gradle
          
          # Create root build.gradle
          echo 'buildscript {' > build.gradle
          echo '    repositories {' >> build.gradle
          echo '        google()' >> build.gradle
          echo '        mavenCentral()' >> build.gradle
          echo '    }' >> build.gradle
          echo '    dependencies {' >> build.gradle
          echo '        classpath "com.android.tools.build:gradle:8.1.0"' >> build.gradle
          echo '        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0"' >> build.gradle
          echo '    }' >> build.gradle
          echo '}' >> build.gradle
          
          # Create app/build.gradle
          mkdir -p app
          echo 'plugins {' > app/build.gradle
          echo '    id "com.android.application"' >> app/build.gradle
          echo '    id "kotlin-android"' >> app/build.gradle
          echo '}' >> app/build.gradle
          echo 'android {' >> app/build.gradle
          echo '    compileSdk 34' >> app/build.gradle
          echo '    defaultConfig {' >> app/build.gradle
          echo '        applicationId "com.example.smsgateway"' >> app/build.gradle
          echo '        minSdk 24' >> app/build.gradle
          echo '        targetSdk 34' >> app/build.gradle
          echo '        versionCode 1' >> app/build.gradle
          echo '        versionName "1.0"' >> app/build.gradle
          echo '    }' >> app/build.gradle
          echo '}' >> app/build.gradle
          echo 'dependencies {' >> app/build.gradle
          echo '    implementation "androidx.core:core-ktx:1.12.0"' >> app/build.gradle
          echo '    implementation "androidx.appcompat:appcompat:1.6.1"' >> app/build.gradle
          echo '}' >> app/build.gradle
          
      - name: Setup Gradle wrapper
        script: |
          wget https://services.gradle.org/distributions/gradle-8.2-bin.zip
          unzip gradle-8.2-bin.zip
          mv gradle-8.2 gradle
          mkdir -p gradle/wrapper
          echo "#!/bin/sh" > gradlew
          echo 'exec gradle/bin/gradle "$@"' >> gradlew
          chmod +x gradlew
          
      - name: Build debug APK
        script: |
          ./gradlew clean assembleDebug --stacktrace
          
      - name: Debug Project Structure
        script: |
          echo "Project structure:"
          find . -type f -name "*.kt*" -o -name "*.xml" -o -name "*.properties"
          echo "\nFile contents:"
          for f in $(find . -type f -name "*.kt*" -o -name "*.xml" -o -name "*.properties"); do
            echo "\n=== $f ==="
            cat "$f"
          done
          
    artifacts:
      - app/build/outputs/apk/debug/*.apk
      - app/build/reports/*
      - app/build/outputs/logs/*.log
